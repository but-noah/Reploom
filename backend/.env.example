# Application Base URL
APP_BASE_URL='http://localhost:8000'

# Auth0 Configuration
# Generate a secure secret with: openssl rand -hex 32
AUTH0_SECRET='use [openssl rand -hex 32] to generate a 32 bytes value'
AUTH0_DOMAIN='your-tenant.auth0.com'
AUTH0_CLIENT_ID='your-auth0-client-id'
AUTH0_CLIENT_SECRET='your-auth0-client-secret'

# Auth0 Token Vault Configuration (for Gmail and other third-party APIs)
# Create a separate Machine-to-Machine (M2M) application in Auth0 for token exchange
# This M2M app needs access to the Auth0 Management API with 'read:users' scope
AUTH0_CUSTOM_API_CLIENT_ID='your-m2m-client-id'
AUTH0_CUSTOM_API_CLIENT_SECRET='your-m2m-client-secret'
AUTH0_AUDIENCE='https://your-tenant.auth0.com/api/v2/'

# Gmail API Configuration
# Scopes required for Gmail integration (space-separated)
GMAIL_SCOPES='https://www.googleapis.com/auth/gmail.readonly https://www.googleapis.com/auth/gmail.modify https://www.googleapis.com/auth/gmail.compose'

# Microsoft 365 / Outlook API Configuration
# These credentials are for the Azure AD application that enables Outlook integration
# Register an application in Azure AD and configure redirect URIs in Auth0
MICROSOFT_CLIENT_ID='your-microsoft-azure-app-client-id'
MICROSOFT_CLIENT_SECRET='your-microsoft-azure-app-client-secret'
# Scopes required for Outlook integration (space-separated)
# Mail.Read: Read user mail
# Mail.ReadWrite: Read and write access to user mail (required for drafts)
OUTLOOK_SCOPES='https://graph.microsoft.com/Mail.Read https://graph.microsoft.com/Mail.ReadWrite'

# OpenAI Configuration
OPENAI_API_KEY='sk-your-openai-api-key'

# Database Configuration
# PostgreSQL connection string
DATABASE_URL="postgresql+psycopg://postgres:postgres@localhost:5432/ai_documents_db"

# Redis Configuration (for caching and session management)
REDIS_URL="redis://localhost:6379/0"
REDIS_PASSWORD=""
REDIS_DB=0

# Vector Database Configuration
# Qdrant for document embeddings and semantic search
QDRANT_URL="http://localhost:6333"
QDRANT_API_KEY=""
QDRANT_COLLECTION_NAME="reploom_documents"

# LangGraph API Configuration
LANGGRAPH_API_URL=http://localhost:54367

# LangGraph Checkpointer Configuration
# Options: postgres (production) or memory (development only - not persistent)
# With postgres, state persists across server restarts and enables true resumable workflows
# With memory, state is lost on restart but useful for local development
GRAPH_CHECKPOINTER=postgres

# Auth0 Fine Grained Authorization (FGA)
FGA_STORE_ID=<your-fga-store-id>
FGA_CLIENT_ID=<your-fga-store-client-id>
FGA_CLIENT_SECRET=<your-fga-store-client-secret>
FGA_API_URL=https://api.xxx.fga.dev
FGA_API_AUDIENCE=https://api.xxx.fga.dev/

# Optional: Shop API Configuration (for demo purposes)
# SHOP_API_URL="http://localhost:3001/api/shop"
# SHOP_API_AUDIENCE="https://api.shop-online-demo.com"

# Optional: Agent Configuration
# AGENT_MAX_ITERATIONS=10
# AGENT_TIMEOUT_SECONDS=300

# Optional: Logging
# LOG_LEVEL=INFO
# LOG_FORMAT=json
