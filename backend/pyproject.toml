[project]
name = "backend"
version = "0.1.0"
description = "Reploom: AI-Powered Multi-Agent Email Responder - LangGraph Python/FastAPI Backend"
readme = "README.md"
requires-python = ">=3.13"
dependencies = [
    "auth0-ai>=1.0.0b4",
    "auth0-ai-langchain>=1.0.0b4",
    "auth0-fastapi>=1.0.0b4",
    "fastapi[standard]>=0.115.14",
    "google-api-python-client>=2.176.0",
    "httpx>=0.28.1",
    "itsdangerous>=2.2.0",
    "langchain-openai>=0.3.28",
    "langchain-text-splitters>=0.3.0",
    "langgraph-cli[inmem]>=0.3.6",
    "langgraph>=0.5.4",
    "langgraph-api==0.2.102",
    "langgraph-runtime-inmem==0.6.0",
    "pydantic-settings>=2.10.1",
    "sqlmodel>=0.0.24",
    "openfga-sdk>=0.9.5",
    "pypdf2>=3.0.1",
    "psycopg>=3.2.9",
    "psycopg-binary>=3.2.9",
    "langchain-postgres>=0.0.15",
    "greenlet>=3.2.3",
    "qdrant-client>=1.13.1",
    "tiktoken>=0.8.0",
    "opentelemetry-api>=1.28.2",
    "opentelemetry-sdk>=1.28.2",
    "opentelemetry-instrumentation-fastapi>=0.49b2",
    "opentelemetry-instrumentation-httpx>=0.49b2",
    "opentelemetry-exporter-otlp-proto-grpc>=1.28.2",
]

[tool.ruff]
line-length = 100
target-version = "py313"

[tool.ruff.lint]
select = [
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings
    "F",   # pyflakes
    "I",   # isort
    "B",   # flake8-bugbear
    "C4",  # flake8-comprehensions
    "UP",  # pyupgrade
]
ignore = [
    "E501",  # line too long (handled by formatter)
    "B008",  # do not perform function calls in argument defaults
    "W191",  # indentation contains tabs
]

[tool.ruff.lint.isort]
known-first-party = ["app"]

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"

[dependency-groups]
dev = [
    "pytest>=8.4.2",
    "pytest-asyncio>=1.2.0",
]
